version: '3.8'

services:
  # Frontend
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8081
    depends_on:
      - company-service
      - project-service
      - task-service
      - analytics-service

  # Backend Services
  company-service:
    build:
      context: ../backend/company-service
      dockerfile: Dockerfile.dev
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://company-db:5432/company_service_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - company-db

  project-service:
    build:
      context: ../backend/project-service
      dockerfile: Dockerfile.dev
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://project-db:5432/project_service_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - project-db

  task-service:
    build:
      context: ../backend/task-service
      dockerfile: Dockerfile.dev
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://task-db:5432/task_service_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - task-db

  analytics-service:
    build:
      context: ../backend/analytics-service
      dockerfile: Dockerfile.dev
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://analytics-db:5432/analytics_service_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - analytics-db

  # AI Agent
  ai-agent:
    build:
      context: ../ai-agent
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ../ai-agent:/app
    depends_on:
      - company-service
      - project-service
      - task-service
      - analytics-service

  # Databases
  company-db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=company_service_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - company-db-data:/var/lib/postgresql/data

  project-db:
    image: postgres:15
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=project_service_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - project-db-data:/var/lib/postgresql/data

  task-db:
    image: postgres:15
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_DB=task_service_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - task-db-data:/var/lib/postgresql/data

  analytics-db:
    image: postgres:15
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_DB=analytics_service_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - analytics-db-data:/var/lib/postgresql/data

volumes:
  company-db-data:
  project-db-data:
  task-db-data:
  analytics-db-data: 